// Generated by CoffeeScript 2.3.2
(function() {
  var $, canvas, drawText, file, graph, image, input, readFile, redraw, text, textCtx;

  $ = function(sel) {
    return document.querySelector(sel);
  };

  image = $('#image');

  input = $('#text');

  graph = $('#graph');

  file = null;

  canvas = null;

  text = '';

  textCtx = null;

  redraw = null;

  readFile = function() {
    var fileReader;
    if (file == null) {
      return;
    }
    fileReader = new FileReader;
    fileReader.onload = function() {
      var img;
      img = new Image;
      img.onload = function() {
        var ctx, link;
        canvas = document.createElement('canvas');
        canvas.width = img.width;
        canvas.height = img.height;
        textCtx = null;
        ctx = canvas.getContext('2d');
        ctx.drawImage(img, 0, 0);
        redraw = function() {
          ctx.rotate(315 * Math.PI / 180);
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(img, 0, 0);
          return ctx.rotate(45 * Math.PI / 180);
        };
        drawText();
        graph.innerHTML = '';
        link = '';
        graph.appendChild(canvas);
        return canvas.addEventListener('click', function() {
          return graph.href = canvas.toDataURL('image/png', 1.0).replace('image/png', 'image/octet-stream');
        });
      };
      return img.src = fileReader.result;
    };
    return fileReader.readAsDataURL(file);
  };

  drawText = function() {
    var i, j, k, l, margin, ref, ref1, ref2, step, textSize, width, x, y;
    if ((canvas == null) || text.length === 0) {
      return;
    }
    textSize = Math.max(15, (Math.min(canvas.width, canvas.height)) / 25);
    if (textCtx != null) {
      redraw();
    } else {
      textCtx = canvas.getContext('2d');
      textCtx.fillStyle = 'rgba(0, 0, 255, 0.15)';
      textCtx.font = 'bold ' + textSize + 'px -apple-system,"Helvetica Neue",Helvetica,Arial,"PingFang SC","Hiragino Sans GB","WenQuanYi Micro Hei","Microsoft Yahei",sans-serif';
      textCtx.rotate(45 * Math.PI / 180);
    }
    width = (textCtx.measureText(text)).width;
    step = Math.sqrt((Math.pow(canvas.width, 2)) + (Math.pow(canvas.height, 2)));
    margin = (textCtx.measureText('啊')).width;
    x = Math.ceil(step / (width + margin));
    y = Math.ceil((step / (4 * textSize)) / 2);
    for (i = k = 0, ref = x; (0 <= ref ? k <= ref : k >= ref); i = 0 <= ref ? ++k : --k) {
      for (j = l = ref1 = -y, ref2 = y; (ref1 <= ref2 ? l <= ref2 : l >= ref2); j = ref1 <= ref2 ? ++l : --l) {
        textCtx.fillText(text, (width + margin) * i, 4 * textSize * j);
      }
    }
  };

  image.addEventListener('change', function() {
    var ref;
    file = this.files[0];
    if ((ref = file.type) !== 'image/png' && ref !== 'image/jpeg' && ref !== 'image.gif') {
      return alert('仅支持 png, jpg, gif 图片格式');
    }
    return readFile();
  });

  input.addEventListener('input', function() {
    text = this.value;
    return drawText();
  });

}).call(this);
